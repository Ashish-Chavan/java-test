"package com.blueoptima.clients.ratelimit;\n\nimport org.apache.http.client.methods.HttpRequestBase;\nimport org.apache.logging.log4j.LogManager;\nimport org.apache.logging.log4j.Logger;\nimport org.aspectj.lang.ProceedingJoinPoint;\n\npublic class RateLimitUtil {\n\n  private static final Logger logger = LogManager.getLogger(RateLimitUtil.class);\n  private static final String NA_VALUE = \"NA\";\n\n  public static String getUrlEndPointForIndividualEndpointMonitoring(\n      ProceedingJoinPoint joinPoint) {\n    if (!isValidJoinPoint(joinPoint)) {\n      return NA_VALUE;\n    }\n\n    try {\n      String url = extractUrlFromArgument(joinPoint.getArgs()[0]);\n      return stripQueryParameters(url);\n    } catch (Exception e) {\n      return handleError(\"Error while getting url endpoint\", e);\n    }\n  }\n\n  private static boolean isValidJoinPoint(ProceedingJoinPoint joinPoint) {\n    return joinPoint != null && joinPoint.getArgs() != null && joinPoint.getArgs().length > 0;\n  }\n\n  private static String extractUrlFromArgument(Object arg) {\n    if (arg instanceof HttpRequestBase) {\n      return ((HttpRequestBase) arg).getURI().toString();\n    }\n    if (arg instanceof String) {\n      return arg.toString();\n    }\n    return NA_VALUE;\n  }\n\n  private static String stripQueryParameters(String url) {\n    if (url == null || NA_VALUE.equals(url)) {\n      return NA_VALUE;\n    }\n    int questionMarkIndex = url.indexOf(\"?\");\n    return questionMarkIndex != -1 ? url.substring(0, questionMarkIndex) : url;\n  }\n\n  private static String handleError(String message, Exception e) {\n    logger.error(message, e);\n    return NA_VALUE;\n  }\n}"
